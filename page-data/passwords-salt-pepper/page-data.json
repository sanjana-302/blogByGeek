{"componentChunkName":"component---src-templates-blog-post-js","path":"/passwords-salt-pepper/","result":{"data":{"site":{"siteMetadata":{"title":"Blog By Another Geek"}},"markdownRemark":{"id":"0635b76d-8c93-56ea-ab1c-2403fff096db","excerpt":"Have you ever wondered how your passwords verify you? Obviously they are required to be saved somewhere? But how can someone know my password?  Can two…","html":"<blockquote>\n<p><strong>Have you ever wondered how your passwords verify you? Obviously they are required to be saved somewhere? But how can someone know my password?</strong> </p>\n</blockquote>\n<blockquote>\n<p><strong>Can two different people have same passwords?</strong></p>\n</blockquote>\n<p>Firm’s (P.S. who really care about you) want to make sure that they do their best to protect your passwords from getting breached. I think data security is something that talks about a firm’s attitude towards it’s costumers.Moreover firm’s reputation relies on this fact. This should be the major concern of any tech giant <strong>costumer trust and protection .</strong></p>\n<p>Earlier I used to wonder how my password can have all the burden of verifying me? How is it saved at a place? If saved at a place(database), then can’t the people who have access to this database use it wrongly?\nSo, I was recently studying about passwords, data security and got a decent answer to my queries. Let’s go step by step.</p>\n<h2>How our passwords stored? Who stores them? Are they safe?</h2>\n<p>Let’s try to understand this with twitter login :</p>\n<p>Let’s call all time amigos/amigas in cryptography - Alice and Bob ;)</p>\n<p>Suppose both of them create an account on twitter.</p>\n<blockquote>\n<h2>What is Hashing?</h2>\n</blockquote>\n<p>A one way road to enhance security. Consider it like any algorithm that converts a string to some super secret decoded version. Now, what I mean by by this is that hashing algorithms are generally irreversible.You cannot go from the output back to the input in algorithm. Remember irreversible freaking chemistry reaction? Everytime a password is processed through a hashing algorithm it produces the same cipher. This decoded version is called Digest.We would be calling it Digest throughout the blog.</p>\n<p><strong>A quick question?</strong></p>\n<p>Have you ever tried implementing your own hash tables? I would suggest you do some :) </p>\n<blockquote>\n<p>Wiki says : A cryptographic hash function (CHF) is a mathematical algorithm that maps data of arbitrary size (often called the “message”) to a bit array of a fixed size (the “hash value”, “hash”, or “message digest”).</p>\n</blockquote>\n<p>There are many Hashing algorithms, you might have heard of them and the stated names below might seem known -</p>\n<ul>\n<li>MD5</li>\n<li>SHA - 1</li>\n<li>SHA - 2</li>\n</ul>\n<p>The higher you go what we say in version the more safe you are.</p>\n<p>The possible reasons for higher versions is that the older one might get compromised.</p>\n<p>These are just a few examples. Never try to implement your own hash function for some serious work. You may end up being hacked!!</p>\n<blockquote>\n<h2>What is Salt and Pepper then?</h2>\n</blockquote>\n<p>Let’s talk now salt and pepper now.</p>","frontmatter":{"title":"Hashing Passwords, adding some salt, pepper to make them taste better!","date":"July 27, 2020","description":"We are not buying pizza, we are buying the fact - |My password is protected| Is it?"}}},"pageContext":{"slug":"/passwords-salt-pepper/","previous":{"fields":{"slug":"/a-new-way-to-think-recursively/"},"frontmatter":{"title":"How do you analyse Recursion?"}},"next":{"fields":{"slug":"/data-security-analysis/"},"frontmatter":{"title":"I analysed Google security!"}}}},"staticQueryHashes":["1246554614","2841359383"]}